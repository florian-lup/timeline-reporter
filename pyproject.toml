[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "timeline-reporter"
version = "0.1.0"
description = "AI-powered news reporter"
requires-python = ">=3.13"

[tool.ruff]
# Set the maximum line length to 88 (Black's default)
line-length = 88
target-version = "py313"

# Exclude directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "htmlcov",
    ".pytest_cache",
]

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]

# Ignore specific rules
ignore = [
    "S101",    # Use of assert detected (allow in tests)
    "T201",    # print statements (useful for debugging)
    "B008",    # Do not perform function calls in argument defaults
    "S311",    # Standard pseudo-random generators (fine for voice selection)
    "S603",    # subprocess call (needed for our lint script)
]

[tool.ruff.lint.per-file-ignores]
# Allow print statements and assert in test files
"tests/**/*.py" = ["T201", "S101", "ARG"]
"test_*.py" = ["T201", "S101", "ARG"]

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["clients", "config", "services", "utils"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.venv
    | venv
    | __pycache__
    | htmlcov
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Ignore missing imports for third-party libraries without stubs
[[tool.mypy.overrides]]
module = [
    "pymongo.*",
    "pinecone.*",
    "openai.*",
    "responses.*",
]
ignore_missing_imports = true

# Less strict for test files
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false 